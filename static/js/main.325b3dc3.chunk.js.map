{"version":3,"sources":["components/TodoItem.js","components/TodosList.js","components/Header.js","components/InputTodo.js","components/TodoContainer.js","index.js"],"names":["TodoItem","this","props","todo","completed","id","title","className","type","checked","onChange","handleChangeProps","onClick","deleteTodoProps","style","fontStyle","color","opacity","textDecoration","React","Component","TodosList","todos","map","Header","padding","lineHeight","fontSize","marginBottom","InputTodo","state","e","setState","target","name","value","handleSubmit","preventDefault","addTodoProps","onSubmit","placeholder","TodoContainer","handleChange","prevState","delTodo","filter","addTodoItem","newTodo","uuidv4","ReactDom","render","document","getElementById"],"mappings":"qNA+BeA,E,uKA5BD,IAAD,SAU4BC,KAAKC,MAAMC,KAApCC,EAVH,EAUGA,UAAWC,EAVd,EAUcA,GAAIC,EAVlB,EAUkBA,MAEvB,OACI,qBAAIC,UAAU,YAAd,UACI,uBACIC,KAAK,WACLC,QAASR,KAAKC,MAAMC,KAAKC,UACzBM,SAAU,kBAAM,EAAKR,MAAMS,kBAAkBN,MAEjD,wBAAQO,QAAS,kBAAM,EAAKV,MAAMW,gBAAgBR,IAAlD,oBAGA,sBAAMS,MAAOV,EAnBE,CACnBW,UAAW,SACXC,MAAO,UACPC,QAAS,GACTC,eAAgB,gBAe8B,KAA1C,SAAiDZ,W,GAvB1Ca,IAAMC,WCkBdC,E,uKAhBL,IAAD,OACL,OACI,8BACKpB,KAAKC,MAAMoB,MAAMC,KAAI,SAAApB,GAAI,OAEtB,aADA,CACC,EAAD,CAEIA,KAAMA,EACNQ,kBAAmB,EAAKT,MAAMS,kBAC9BE,gBAAiB,EAAKX,MAAMW,iBAHvBV,EAAKE,a,GAPNc,IAAMC,WCgBfI,EAjBA,WASX,OACI,yBAAQV,MANQ,CAChBW,QAAS,SACTC,WAAY,OAIZ,UACI,oBAAIZ,MAAO,CAAEa,SAAU,OAAQC,aAAc,QAA7C,6BACA,mBAAGd,MAAO,CAAEa,SAAU,QAAtB,mE,OC0BGE,E,4MArCXC,MAAQ,CACJxB,MAAO,I,EAGXI,SAAW,SAACqB,GAER,EAAKC,SAAL,eACKD,EAAEE,OAAOC,KAAOH,EAAEE,OAAOE,S,EAIlCC,aAAe,SAACL,GACZA,EAAEM,iBAEF,EAAKnC,MAAMoC,aAAa,EAAKR,MAAMxB,OACnC,EAAK0B,SAAS,CACV1B,MAAO,M,uDAKX,OACI,uBAAMiC,SAAUtC,KAAKmC,aAAc7B,UAAU,iBAA7C,UACI,uBACIC,KAAK,OACLD,UAAU,aACV2B,KAAK,QACLM,YAAY,cACZL,MAAOlC,KAAK6B,MAAMxB,MAClBI,SAAUT,KAAKS,WAEnB,uBAAOF,KAAK,SAASD,UAAU,eAAgB4B,MAAM,kB,GAhC7Cf,a,QCsETqB,E,4MAjEXX,MAAQ,CACJR,MAAO,CACH,CACIjB,GAAI,EACJC,MAAO,gCACPF,WAAW,GAEf,CACIC,GAAI,EACJC,MAAO,kCACPF,WAAW,GAEf,CACIC,GAAI,EACJC,MAAO,wBACPF,WAAW,K,EAKvBsC,aAAe,SAACrC,GAEZ,EAAK2B,UAAS,SAAAW,GAAS,MAAK,CACxBrB,MAAO,EAAKQ,MAAMR,MAAMC,KAAI,SAAApB,GAIxB,OAHIA,EAAKE,KAAOA,IACZF,EAAKC,WAAaD,EAAKC,WAEpBD,U,EAKnByC,QAAU,SAAAvC,GAEN,EAAK2B,SAAS,CACVV,MAAM,YACC,EAAKQ,MAAMR,MAAMuB,QAAO,SAAA1C,GACvB,OAAOA,EAAKE,KAAMA,S,EAMlCyC,YAAc,SAAAxC,GAEV,IAAMyC,EAAU,CACZ1C,GAAI2C,cACJ1C,MAAOA,EACPF,WAAW,GAEf,EAAK4B,SAAS,CACVV,MAAM,GAAD,mBAAK,EAAKQ,MAAMR,OAAhB,CAAuByB,O,uDAKhC,OACI,sBAAKxC,UAAU,YAAf,UACI,cAAC,EAAD,IACA,cAAC,EAAD,CAAW+B,aAAcrC,KAAK6C,cAC/B,cAAC,EAAD,CAAWxB,MAAOrB,KAAK6B,MAAMR,MAAOX,kBAAmBV,KAAKyC,aAAc7B,gBAAiBZ,KAAK2C,iB,GA7DnFzB,IAAMC,W,MCAlC6B,IAASC,OACL,cAAC,EAAD,IACCC,SAASC,eAAe,W","file":"static/js/main.325b3dc3.chunk.js","sourcesContent":["import React from 'react';\r\n\r\nclass TodoItem extends React.Component {\r\n    render() {\r\n        // Adding a line-through to a completed task in the to-dos list\r\n        // add the following styles in the render() method but above the return statement:\r\n        const completedStyle = {\r\n            fontStyle: \"italic\",\r\n            color: \"#d35e0f\",\r\n            opacity: 0.4,\r\n            textDecoration: \"line-through\",\r\n        }\r\n        // Using Destructuring\r\n        const { completed, id, title } = this.props.todo\r\n\r\n        return (\r\n            <li className=\"todo-item\">\r\n                <input \r\n                    type=\"checkbox\" \r\n                    checked={this.props.todo.completed}\r\n                    onChange={() => this.props.handleChangeProps(id)}\r\n                /> \r\n                <button onClick={() => this.props.deleteTodoProps(id)}>\r\n                    Delete\r\n                </button>\r\n                <span style={completed ? completedStyle : null}>{title}</span>\r\n             </li>\r\n        )\r\n    }\r\n}\r\n\r\nexport default TodoItem;\r\n","import React from 'react';\r\nimport TodoItem from './TodoItem';\r\n\r\nclass TodosList extends React.Component {\r\nrender() {\r\n    return (\r\n        <div>\r\n            {this.props.todos.map(todo => (\r\n                // <li key={todo.id}>{todo.title}</li>\r\n                <TodoItem \r\n                    key={todo.id} \r\n                    todo={todo}\r\n                    handleChangeProps={this.props.handleChangeProps}\r\n                    deleteTodoProps={this.props.deleteTodoProps}\r\n                />\r\n            ))}\r\n        </div>\r\n    );\r\n}\r\n}\r\nexport default TodosList;","import React from 'react';\r\n\r\nconst Header = () => {\r\n    /* Annother way to use an inline style in React is to use variables.\r\n    Still in the Header.js file, we are adding the following code above\r\n    the return statement: */\r\n    const headerStyle = {\r\n        padding: \"20px 0\",\r\n        lineHeight: \"2em\",\r\n    }\r\n    \r\n    return (\r\n        <header style={headerStyle}>\r\n            <h1 style={{ fontSize: \"25px\", marginBottom: \"15px\" }}>Simple Todo App</h1>\r\n            <p style={{ fontSize: \"19px\"}}>Please add to-dos item(s) through the input field</p>\r\n        </header>\r\n    )\r\n}\r\n\r\nexport default Header;","import React, { Component } from 'react';\r\n\r\nclass InputTodo extends Component {\r\n    state = {\r\n        title: \"\"\r\n    }\r\n\r\n    onChange = (e) => {\r\n        // console.log(\"hello\");\r\n        this.setState({\r\n            [e.target.name]: e.target.value,\r\n        })\r\n    }\r\n\r\n    handleSubmit = (e) => {\r\n        e.preventDefault();\r\n        // console.log(this.state.title);\r\n        this.props.addTodoProps(this.state.title);\r\n        this.setState({\r\n            title: \"\"\r\n        });\r\n    };\r\n\r\n    render() {\r\n        return (\r\n            <form onSubmit={this.handleSubmit} className=\"form-container\"> \r\n                <input \r\n                    type=\"text\" \r\n                    className=\"input-text\"\r\n                    name=\"title\" \r\n                    placeholder=\"Add Todo...\" \r\n                    value={this.state.title} \r\n                    onChange={this.onChange} \r\n                />\r\n                <input type=\"submit\" className=\"input-submit\"  value=\"Submit\" />\r\n            </form>\r\n        )\r\n    }\r\n}\r\n\r\nexport default InputTodo;","import React from 'react';\r\nimport TodosList from './TodosList';\r\nimport Header from './Header';\r\nimport InputTodo from './InputTodo';\r\nimport {v4 as uuidv4} from 'uuid';\r\n\r\nclass TodoContainer extends React.Component {\r\n    state = {\r\n        todos: [\r\n            {\r\n                id: 1,\r\n                title: \"Setup development environment\",\r\n                completed: true\r\n            },\r\n            {\r\n                id: 2,\r\n                title: \"Develop website and add content\",\r\n                completed: false\r\n            },\r\n            {\r\n                id: 3,\r\n                title: \"Deploy to live server\",\r\n                completed: true\r\n            }\r\n        ]\r\n    };\r\n\r\n    handleChange = (id) => {\r\n        // console.log(\"clicked\", id);\r\n        this.setState(prevState => ({\r\n            todos: this.state.todos.map(todo => {\r\n                if (todo.id === id) {\r\n                    todo.completed = !todo.completed;\r\n                }\r\n                return todo;\r\n            }),\r\n        }));\r\n    };\r\n\r\n    delTodo = id => {\r\n        // console.log(\"deleted\", id);\r\n        this.setState({\r\n            todos: [\r\n                ...this.state.todos.filter(todo => {\r\n                    return todo.id !==id;\r\n                })\r\n            ]\r\n        });\r\n    };\r\n\r\n    addTodoItem = title => {\r\n        // console.log(title);\r\n        const newTodo = {\r\n            id: uuidv4(),\r\n            title: title,\r\n            completed: false\r\n        }\r\n        this.setState({\r\n            todos:[...this.state.todos, newTodo]\r\n        });\r\n    };\r\n\r\n    render() {\r\n        return (\r\n            <div className=\"container\">\r\n                <Header />\r\n                <InputTodo addTodoProps={this.addTodoItem} />\r\n               <TodosList todos={this.state.todos} handleChangeProps={this.handleChange} deleteTodoProps={this.delTodo}/>\r\n            </div>\r\n        );\r\n    }\r\n}\r\nexport default TodoContainer;\r\n","import React from 'react';\r\nimport ReactDom from 'react-dom';\r\n// component file\r\nimport TodoContainer from './components/TodoContainer';\r\nimport './App.css';\r\n\r\nReactDom.render(\r\n    <TodoContainer />,\r\n     document.getElementById('root')\r\n);"],"sourceRoot":""}